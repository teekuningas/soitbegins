name: Build and Publish

on:
  push:
    tags:
      - '*'
    branches:
      - develop

jobs:
  backend_build_and_publish:
    name: Backend Build and Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Extract tag name
      shell: bash
      run: echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Setup Nix
      uses: cachix/install-nix-action@v22
      with:
        extra_nix_config: "system-features = nixos-test benchmark big-parallel kvm"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      run: |
        cd backend
        nix build .#dockerImage
        docker load < result
        docker tag soitbegins-backend:latest ghcr.io/${{ github.repository }}/soitbegins-backend:${{ env.IMAGE_TAG }}
        docker push ghcr.io/${{ github.repository }}/soitbegins-backend:${{ env.IMAGE_TAG }}

  frontend_build_and_publish:
    name: Frontend Build and Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Extract tag name
      shell: bash
      run: echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      run: |
        cd frontend
        docker build -f Containerfile -t ghcr.io/${{ github.repository }}/soitbegins-frontend:${{ env.IMAGE_TAG }} .
        docker push ghcr.io/${{ github.repository }}/soitbegins-frontend:${{ env.IMAGE_TAG }}
